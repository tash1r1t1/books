{"version":3,"sources":["app.js"],"names":["express","require","bodyParser","path","session","app","indexRoutes","adminRoutes","authRoutes","bookRoutes","set","use","urlencoded","extended","join","__dirname","secret","resave","saveUninitialized","PORT","listen","console","log"],"mappings":";;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CAAoC;;;AACpC,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B,C,CAA2C;;;AAC3C,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB,C,CAA8B;;;AAC9B,IAAMG,OAAO,GAAGH,OAAO,CAAC,iBAAD,CAAvB,C,CAA4C;;;AAC5C,IAAMI,GAAG,GAAGL,OAAO,EAAnB,C,CAAuB;AAEvB;;AACA,IAAMM,WAAW,GAAGL,OAAO,CAAC,gBAAD,CAA3B,C,CAA+C;;;AAC/C,IAAMM,WAAW,GAAGN,OAAO,CAAC,gBAAD,CAA3B,C,CAA+C;;;AAC/C,IAAMO,UAAU,GAAGP,OAAO,CAAC,eAAD,CAA1B,C,CAA+C;;;AAC/C,IAAMQ,UAAU,GAAGR,OAAO,CAAC,eAAD,CAA1B,C,CAA+C;AAE/C;;;AACAI,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CAA+B;AAE/B;;AACAL,GAAG,CAACM,GAAJ,CAAQT,UAAU,CAACU,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAAoD;AAEpD;;AACAR,GAAG,CAACM,GAAJ,CAAQX,OAAO,UAAP,CAAeG,IAAI,CAACW,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CAAyD;AAEzD;;AACAV,GAAG,CAACM,GAAJ,CAAQP,OAAO,CAAC;AACZY,EAAAA,MAAM,EAAE,iBADI;AACe;AAC3BC,EAAAA,MAAM,EAAE,KAFI;AAEG;AACfC,EAAAA,iBAAiB,EAAE,IAHP,CAGY;;AAHZ,CAAD,CAAf,E,CAMA;;AACAb,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAaL,WAAb,E,CAA2B;;AAC3BD,GAAG,CAACM,GAAJ,CAAQ,QAAR,EAAkBJ,WAAlB,E,CAAgC;;AAChCF,GAAG,CAACM,GAAJ,CAAQ,OAAR,EAAiBH,UAAjB,E,CAAgC;;AAChCH,GAAG,CAACM,GAAJ,CAAQ,QAAR,EAAkBF,UAAlB,E,CAAiC;AAEjC;;AACA,IAAMU,IAAI,GAAG,IAAb,C,CAAmB;;AACnBd,GAAG,CAACe,MAAJ,CAAWD,IAAX,EAAiB,YAAM;AACnBE,EAAAA,OAAO,CAACC,GAAR,gDAAoDH,IAApD,GADmB,CAC0C;AAChE,CAFD","sourcesContent":["// Імпорт необхідних модулів\r\nconst express = require('express'); // Основний фреймворк для роботи з HTTP\r\nconst bodyParser = require('body-parser'); // Модуль для парсингу тіла запиту\r\nconst path = require('path'); // Модуль для роботи з файловими шляхами\r\nconst session = require('express-session'); // Модуль для управління сесіями\r\nconst app = express(); // Створення екземпляра додатку Express\r\n\r\n// Імпорт маршрутів\r\nconst indexRoutes = require('./routes/index'); // Маршрути для головної сторінки\r\nconst adminRoutes = require('./routes/admin'); // Маршрути для адмін-панелі\r\nconst authRoutes = require('./routes/auth');   // Маршрути для аутентифікації\r\nconst bookRoutes = require('./routes/book');   // Маршрути для роботи з книгами\r\n\r\n// Налаштування движка шаблонів\r\napp.set('view engine', 'ejs'); // Використання EJS як движка шаблонів\r\n\r\n// Налаштування парсингу тіла запиту\r\napp.use(bodyParser.urlencoded({ extended: true })); // Дозволяє парсити URL-кодовані тіла запитів\r\n\r\n// Налаштування статичних файлів\r\napp.use(express.static(path.join(__dirname, 'public'))); // Додає статичні файли з папки 'public'\r\n\r\n// Налаштування сесій\r\napp.use(session({\r\n    secret: 'your-secret-key', // Ключ для шифрування сесії\r\n    resave: false, // Не зберігати сесію, якщо вона не була змінена\r\n    saveUninitialized: true // Зберігати нові сесії, навіть якщо вони не були ініціалізовані\r\n}));\r\n\r\n// Налаштування маршрутів\r\napp.use('/', indexRoutes); // Головні маршрути\r\napp.use('/admin', adminRoutes); // Маршрути адмін-панелі\r\napp.use('/auth', authRoutes);   // Маршрути аутентифікації\r\napp.use('/books', bookRoutes);   // Маршрути для книг\r\n\r\n// Запуск сервера\r\nconst PORT = 8080; // Порт, на якому запуститься сервер\r\napp.listen(PORT, () => {\r\n    console.log(`Server listening at http://localhost:${PORT}`); // Лог для підтвердження запуску сервера\r\n});\r\n"],"file":"app.dev.js"}