{"version":3,"sources":["logic.js"],"names":["document","addEventListener","bookForm","getElementById","fetchBooks","fetch","response","json","then","books","innerHTML","forEach","book","createElement","li","concat","title","author","year","description","id","bookList","getAttribute","headers","querySelectorAll","button","e","target","URLSearchParams","Content-Type","body","preventDefault","formData","FormData","method","reset"],"mappings":"aAAAA,SAASC,iBAAiB,mBAAoB,WAC1C,IAAMC,EAAWF,SAASG,eAAe,aADpCF,EAAAA,SAAiBE,eAA1B,aAmBI,SAASC,IACLC,MAAM,gBACgBC,KAAAA,SAAAA,GAAA,OAAJA,EAAAC,SACRC,KAAA,SAAAC,GACOC,EAATA,UAAA,GACMC,EAAQA,QAAAC,SAAAA,GACCZ,IAASa,EAAAA,SAAcA,cAAlC,MACAC,EAAAJ,UAAA,qCAAAK,OAKAH,EAAAI,MALA,iBAAAD,OAKAH,EAAAK,OALA,MAAAF,OAKAH,EAAAM,KALA,QAAAH,OAKAH,EAAAO,YALA,+CAAAJ,OAFJH,EAAAQ,GAEI,wFAAAL,OAQsBH,EAA1BQ,GARI,mEAUgBC,EAAQC,YAAaR,KAG7BS,SAASC,iBAAA,kBAAAb,QAAA,SAAAc,GAAEA,EAAAxB,iBAAgB,QAAA,SAAAyB,GAFR,IAAAN,EAAAM,EAAAC,OAAAL,aAAA,WAGTM,MAAAA,gBAAgB,CAAER,OAAAA,OAAtBG,QAAA,CAAAM,eAAA,qCACFC,KAAA,IAAAF,gBAAA,CAAAR,GAAAA,MAAMhB,KAAN,WAAA,OAAAA,UAIPoB,SAAAA,iBAAiB,gBAAwBb,QAAAc,SAAAA,GACvCxB,EAAAA,iBAA0B,QAAA,SAAOyB,GAChBJ,EAAAA,OAAaA,aACjC,iBA3CpBlB,IAEAF,EAASD,iBAAiB,SAAU,SAAAyB,GAC9BK,EAAAA,iBACIC,IAAAA,EAAeC,IAAAA,SAAS/B,GAC9BG,MAAM,SAAU,CACN6B,OADM,OAENJ,KAAIF,IAAAA,gBAAgBI,KAF9BxB,KAGQ,WACJJ,IACAF,EAAAiC","file":"logic.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const bookForm = document.getElementById('book-form');\r\n    const bookList = document.getElementById('book-list');\r\n\r\n    // Fetch books and render them\r\n    fetchBooks();\r\n\r\n    bookForm.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(bookForm);\r\n        fetch('/admin', {\r\n            method: 'POST',\r\n            body: new URLSearchParams(formData)\r\n        }).then(() => {\r\n            fetchBooks();\r\n            bookForm.reset();\r\n        });\r\n    });\r\n\r\n    function fetchBooks() {\r\n        fetch('/admin/books')\r\n            .then(response => response.json())\r\n            .then(books => {\r\n                bookList.innerHTML = '';\r\n                books.forEach(book => {\r\n                    const li = document.createElement('li');\r\n                    li.innerHTML = `\r\n                        <strong>${book.title}</strong> by ${book.author} (${book.year}) - ${book.description}\r\n                        <button data-id=\"${book.id}\" class=\"delete-button\">Видалити</button>\r\n                        <button data-id=\"${book.id}\" class=\"edit-button\">Редагувати</button>\r\n                    `;\r\n                    bookList.appendChild(li);\r\n                });\r\n\r\n                document.querySelectorAll('.delete-button').forEach(button => {\r\n                    button.addEventListener('click', (e) => {\r\n                        const id = e.target.getAttribute('data-id');\r\n                        fetch('/admin/delete', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                            body: new URLSearchParams({ id })\r\n                        }).then(() => fetchBooks());\r\n                    });\r\n                });\r\n\r\n                document.querySelectorAll('.edit-button').forEach(button => {\r\n                    button.addEventListener('click', (e) => {\r\n                        const id = e.target.getAttribute('data-id');\r\n                        // Here you can add functionality for editing books\r\n                        // You might want to display a form with the current book data for editing\r\n                    });\r\n                });\r\n            });\r\n    }\r\n});"]}